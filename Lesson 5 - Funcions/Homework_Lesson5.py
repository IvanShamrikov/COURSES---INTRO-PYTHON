# 1. Написать функцию, принимающую два аргумента.
#     Если оба аргумента являются числами (int, float) - вернуть их произведение, если строками - собрать в одну строку и вернуть,
#     если первый строка, а второй нет - вернуть словарь, в котором ключ - первый аргумент, значение - второй.
#     В любом другом случае вернуть tuple аргументов.
#
# 2. Возьмите задание 3 из ДЗ-3 и реализуйте получение ответа от пользователя в виде функции.
#     Функция должна добиться от пользователя ответа "Y" или "N".
#     Функция должна возвращать True если пользователь сказал "Y" и False если пользователь сказал "N".
#
# 4* Написать функцию-анализатор строк. Функция должна определить содержимое строки по следующим критериям:
#     если в стока похожа на email-адрес функция должна вернуть строку "email". Определение email-адреса -  есть символ @; перед ним не менее трех букв; после него не менее трех букв, точка, не менее трех букв (что-то типа abc@def.ghi )
#     если в стока похожа на номер телефона функция должна вернуть строку "phone". Определение номера телефона : "+" в начале, далее 12 цифр
#     если в стока похожа на имя - функция должна вернуть строку "name". Определение имени : два слова; каждое длиной не менее 3х букв; первые буквы каждого слова большие, остальные маленькие;
#     если в стока не похожа ни на что - должна вернуть строку "unknown"



# ---------------------
# ЗАДАНИЕ 1

# 1. Написать функцию, принимающую два аргумента.
#     Если оба аргумента являются числами (int, float) - вернуть их произведение, если строками - собрать в одну строку и вернуть,
#     если первый строка, а второй нет - вернуть словарь, в котором ключ - первый аргумент, значение - второй.
#     В любом другом случае вернуть tuple аргументов.



# Вариант 1
# x = input('Введи первое число - ')
# y = input('Введи второе число - ')
#
# def coop (a,b):
#     try:
#         a = float(a)
#     except:
#         try:
#             b = float(b)
#         except:
#             z = a + b
#         else:
#             z = {a:b}
#     else:
#         try:
#             b = float(b)
#         except:
#             z = (a,b)
#         else:
#             z = a * b
#             try:
#                 z = int(z)
#             except:
#                 pass
#             else:
#                 z = int(z)
#     return z
#
# print(coop (x,y))


# Вариант 2

# x = 3.5
# y = 5
#
# def coop (a,b):
#     if (isinstance(a, int) or isinstance(a, float)) and (isinstance(b, int) or isinstance(b, float)):
#         print (a*b)
#     elif isinstance(a, str) and isinstance(b, str):
#         print (a+b)
#     elif isinstance(a, str) and not isinstance(b, str):
#         print ({a : b})
#     return (a, b)
#
# print(coop(x,y))

# ---------------------
# ЗАДАЧА 2
# 2. Возьмите задание 3 из ДЗ-3 и реализуйте получение ответа от пользователя в виде функции.
#     Функция должна добиться от пользователя ответа "Y" или "N".
#     Функция должна возвращать True если пользователь сказал "Y" и False если пользователь сказал "N".

# Вывести пользователю какое-нибудь приветствие. Спросить у пользователя, хочет ли он повторно его увидеть (Y/N)?.
# Повторять приветствие если (Y), завершить выполнение если (N), если ответ не Y или N - переспрашивать, пока не введет Y или N.


# def analisys (a):
#     while True:
#         if a.upper() == "Y":
#             print(True)
#             return True
#         elif a.upper() == "N":
#             print(False)
#             return False
#         else:
#             a = input("I didn't understand your answer. Please, type Enter Y/N ---> ")
#
# print("Hello user!")
# analisys(input("Do you want to see this greeting again? Enter Y/N ---> "))





# ---------------------
# ЗАДАЧА 3
# 3* Написать функцию-анализатор строк. Функция должна определить содержимое строки по следующим критериям:
#     если в стока похожа на email-адрес функция должна вернуть строку "email". Определение email-адреса -  есть символ @; перед ним не менее трех букв; после него не менее трех букв, точка, не менее трех букв (что-то типа abc@def.ghi )
#     если в стока похожа на номер телефона функция должна вернуть строку "phone". Определение номера телефона : "+" в начале, далее 12 цифр
#     если в стока похожа на имя - функция должна вернуть строку "name". Определение имени : два слова; каждое длиной не менее 3х букв; первые буквы каждого слова большие, остальные маленькие;
#     если в стока не похожа ни на что - должна вернуть строку "unknown"



# Ниже преведено решение с input сложной строки. Это более сложный вариант, Вначале нужно анализировать только слово/два слова.


def email_check (word):
    if "@" in word:
        if (len(word.split("@")) == 2) and word.index("@") > 2 and (len(word) - word.index("@")) > 6:
            domain = (word.split("@")[1]).split(".")
            if len(domain) == 2:
                if len(domain[0]) > 2 and len(domain[1]) > 2:
                    print ("Word " + word + " seems to be email")
                    return word


def phone_check(word):
    if word[0] == "+" and len(word) == 13:
        q = 0
        for i in range(1, len(word)):
            try:
                int(word[i])
            except:
                q = 1
                break
        if q == 0:
            print ("Word " + word + " seems to be phone")
            return word


def name_check (my_str):
    if len(my_str) == 2 and len(my_str[0])>2 and len(my_str[1])>2 :
        q=0
        for word in my_str:
            if word != word.capitalize():
                q=1
        if q == 0:
            print ("String " + data + " seems to be name")
            return my_str


def analisys (my_str):

    if name_check(my_str):
        res["name"].append(my_str)

    for word in my_str:
        if email_check(word):
            res["email"].append(word)

        if phone_check(word):
            res["phone"].append(word)


data = input("Введите произвольную строку --->")
my_str = data.split(" ")
res = {"name":[], "phone":[], "email":[]}
analisys (my_str)
print (res)



# есть строка, нгадо поределить на что она похожа.
# В1 - телефон (правило + и 12 цифр),
# В2 - имейл (правило - @ по средине, имя не менее 3 букв, доменное имя буквы три буквы
# В3 - имя фамилия (правило - два слова через пробел, каждое с большой буквы)

# st = input().split()
#
# for word in st:
#     if len(word) == 13 and word.startswith('+') and word[1:].isdigit():
#         print('This is phone number')
#     elif '@' in word:
#         temp = word.split('@')
#         if len(temp[0]) >= 3 and temp[0].isalpha():
#             if 0 < temp[1].find('.') < 3:
# #Заготовка, нужно доделать